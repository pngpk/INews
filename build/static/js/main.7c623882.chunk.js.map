{"version":3,"sources":["Components/loading.gif","Components/NavBar.js","Components/NewsItem.js","Components/Spinner.js","Components/News.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","dist","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","NewsItem","props","title","description","imgurl","newsurl","author","date","source","style","display","justyfyContent","position","right","src","alt","Date","toGMTString","href","target","rel","Spinner","loading","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","News","_useState","useState","_useState2","slicedToArray","articles","setArticle","_useState3","_useState4","setLoading","_useState5","_useState6","page","setPage","_useState7","_useState8","totalResults","setTotalResults","updateNews","_ref","asyncToGenerator","_callee","url","data","parsedData","_context","concat","country","category","pageSize","fetch","json","apply","arguments","useEffect","string","handlePrevClick","_ref2","_callee2","_context2","handleNextClick","_ref3","_callee3","_context3","margin","marginTop","toUpperCase","Components_Spinner","map","element","Components_NewsItem","urlToImage","disabled","onClick","Math","ceil","defaultProps","propsType","PropTypes","number","App","Components_NavBar","react_router_dist","path","Components_News","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.7c623882.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.ce797770.gif\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar fixed-top navbar-expand-lg bg-black\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            INews\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Business\">\r\n                  Business\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Entertainment\">\r\n                  Entertainment\r\n                </Link>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/General\">\r\n                  General\r\n                </Link>\r\n              </li> */}\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Health\">\r\n                  Health\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Science\">\r\n                  Science\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Sports\">\r\n                  Sports\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Technology\">\r\n                  Technology\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\n\r\nconst NewsItem = (props)=>{\r\n\r\n    let {title, description,imgurl,newsurl,author,date,source} = props;\r\n    return (\r\n      <div>\r\n        <div className=\"card\" >\r\n          <div style ={ {display: 'flex',\r\n          justyfyContent: 'flex-end',\r\n          position:'absolute',\r\n          right:'0'}}>\r\n          <span className=\" badge rounded-pill bg-danger\"> {source} </span> \r\n          </div>\r\n        \r\n            <img src={!imgurl?\"https://c.ndtvimg.com/2023-01/c51kea6_haryana-auto-fight_625x300_06_January_23.jpg\":imgurl} className=\"card-img-top\" alt=\"...\"/>\r\n             <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{title}</h5>\r\n              <p className=\"card-text\">{description}</p>\r\n              <p className=\"card-text\"><small className=\"text-muted\">By {!author?\"Unknown\": author} on {new Date (date).toGMTString()}</small></p>\r\n              <a href={newsurl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary bg-black\">Read More</a>\r\n             </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default NewsItem","import React from 'react'\r\nimport loading from './loading.gif'\r\n\r\nconst Spinner = ()=>{\r\n\r\n    return (\r\n      <div className= \"text-center\">\r\n        <img src ={loading} alt = \"loading\" />\r\n       \r\n      </div>\r\n    )\r\n  \r\n}\r\nexport default Spinner","import React, { useEffect, useState } from \"react\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport Spinner from \"./Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst News = (props) => {\r\n  // const [pageSize, setPageSize] = useState(12);\r\n  const [articles, setArticle] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const updateNews = async () => {\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apikey=6c7a4d881829415aabe5cddab74b49e9&page=${page}&pageSize=${props.pageSize}`;\r\n    setLoading(true);\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    setArticle(parsedData.articles);\r\n    setTotalResults(parsedData.totalResults);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateNews();\r\n  }, []);\r\n\r\n  const handlePrevClick = async () => {\r\n    setPage(page - 1);\r\n    updateNews();\r\n  };\r\n\r\n  const handleNextClick = async () => {\r\n    setPage(page + 1);\r\n    updateNews();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-3\">\r\n      <div className=\"row\">\r\n        <h1 className=\"text-center\" style={{ margin: \"35px 0px\", marginTop: '90px' }}>\r\n          INews - Top {capitalizeFirstLetter(props.category)} Headlines\r\n        </h1>\r\n        {loading && <Spinner />}\r\n\r\n        {!loading &&\r\n          articles.map((element) => {\r\n            return (\r\n              <div className=\"col-md-4\" key={element.url}>\r\n                <NewsItem\r\n                  title={element.title}\r\n                  description={element.description}\r\n                  imgurl={element.urlToImage}\r\n                  newsurl={element.url}\r\n                  source={element.source.name}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      <div className=\"container d-flex justify-content-between\">\r\n        <button\r\n          disabled={page <= 1}\r\n          type=\"button\"\r\n          className=\"btn btn-dark\"\r\n          onClick={handlePrevClick}\r\n        >\r\n          {\" \"}\r\n          &larr; Previous\r\n        </button>\r\n        <button\r\n          disabled={page + 1 > Math.ceil(totalResults / 9)}\r\n          type=\"button\"\r\n          className=\"btn btn-dark\"\r\n          onClick={handleNextClick}\r\n        >\r\n          Next &rarr;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nNews.defaultProps = {\r\n  country: \"in\",\r\n  pageSize: 12,\r\n  category: \"general\",\r\n};\r\n\r\nNews.propsType = {\r\n  country: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n  category: PropTypes.string,\r\n};\r\nexport default News;\r\n","import './App.css';\nimport React from 'react'\nimport NavBar from './Components/NavBar';\nimport News from './Components/News';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nconst App=()=>{\n\n    return (\n      <Router>\n         <div>\n        \n           <NavBar/>\n           {/* <News/> */}\n           <Routes>\n            <Route path=\"/Business\" element ={<News  key=\"Business\" category=\"Business\"/>}/>\n            <Route path=\"/Entertainment\" element ={<News  key=\"Entertainment\" category=\"Entertainment\"/>}/>\n            <Route path=\"/\" element ={<News  key=\"General\" category=\"General\"/>}/>\n            <Route path=\"/Health\" element ={<News  key=\"Health\" category=\"Health\"/>}/>\n            <Route path=\"/Science\" element ={<News  key=\"Science\" category=\"Science\"/>}/>\n            <Route path=\"/Sports\" element ={<News  key=\"Sports\" category=\"Sports\"/>}/>\n            <Route path=\"/Technology\" element ={<News  key=\"Technology\" category=\"Technology\"/>}/>\n            {/* <Route path=\"/\" element ={<News />}/> */}\n           </Routes>\n       \n          \n        </div>\n      </Router>\n    \n    )\n      \n}\n export default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}